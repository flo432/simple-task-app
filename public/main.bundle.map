{"version":3,"sources":["webpack:///./src/app/services/task.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/tasks/tasks.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/components/tasks/tasks.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/components/tasks/tasks.component.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAA0C;AACE;AACd;AAG9B;IAEE,qBAAoB,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;QAC3B,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC1C,CAAC;IAED,8BAAQ,GAAR;QACE,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAClD,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAGxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aAC1C,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC1B,CAAC;IAED,6BAAO,GAAP,UAAQ,OAAO;QACb,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAClD,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAEvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aACpE,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3B,CAAC;IAED,gCAAU,GAAV,UAAW,EAAE;QACX,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAClD,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAC,EAAE,CAAC,CAAC;QAE3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;aACzB,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3B,CAAC;IAED,kCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAClD,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEjD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aAChE,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3B,CAAC;IAED,kCAAY,GAAZ,UAAa,EAAE;QACZ,MAAM,CAAC,EAAE,CAAC;QACV,sCAAsC;IAC5C,CAAC;IA/CD;QAAC,wFAAU,EAAE;;mBAAA;IAgDb,kBAAC;;AAAD,CAAC;;;;;;;;ACpDD;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN0E;AAC5B;AACU;AACZ;AAE5C,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACTX;AACY;AAQrD;IAAA;IAEA,CAAC;IARD;QAAC,wFAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,kCAAmC;YACnC,kCAAkC;YAClC,SAAS,EAAC,CAAC,2EAAW,CAAC;SACxB,CAAC;;oBAAA;IAGF,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXwD;AACjB;AACI;AACF;AACY;AAER;AACqB;AACd;AAErD,IAAM,SAAS,GAAW;IACxB,EAAC,IAAI,EAAC,EAAE,EAAE,SAAS,EAAE,yFAAc,EAAC;CACrC;AAgBD;IAAA;IAAyB,CAAC;IAd1B;QAAC,sFAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,yFAAc;aACf;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,iEAAU;gBACV,qEAAY,CAAC,OAAO,CAAC,SAAS,CAAC;aAChC;YACD,SAAS,EAAE,CAAC,2EAAW,CAAC;YACxB,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;;iBAAA;IACuB,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;AC5BuB;AACM;AACf;AAQxC;IAIE,wBAAoB,WAAuB,EAAU,MAAa;QAJpE,iBA6DC;QAzDqB,gBAAW,GAAX,WAAW,CAAY;QAAU,WAAM,GAAN,MAAM,CAAO;QAChE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;aAC1B,SAAS,CAAC,eAAK;YACd,qBAAqB;YACnB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAO,GAAP,UAAQ,KAAK;QAAb,iBAcC;QAbC,KAAK,CAAC,cAAc,EAAE,CAAC;QACtB,0BAA0B;QAE3B,IAAI,OAAO,GAAG;YACZ,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,KAAK;SACd;QAED,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC;aAC9B,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAU,GAAV,UAAW,EAAE;QACX,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;aAC5B,SAAS,CAAC,cAAI;YACb,EAAE,EAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC;gBACd,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAE,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;oBACjC,EAAE,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,EAAC;wBACrB,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACrB,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,KAAK,GAAG;YACV,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM;SACrB,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC;aACjC,SAAS,CAAC,cAAI;YACb,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QAC7B,CAAC,CAAC;IAGN,CAAC;IAED,iCAAQ,GAAR;IACA,CAAC;IAhEH;QAAC,wFAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,kCAAqC;YACrC,kCAAoC;SACrC,CAAC;;sBAAA;IA8DF,qBAAC;;AAAD,CAAC;;;;;;;;;ACvED;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,+EAA+E;AAExE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF,mB;;;;;;;ACAA,8BAA8B,kCAAkC,GAAG,G;;;;;;;ACAnE,6H;;;;;;;ACAA,ohBAAohB,cAAc,4N","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers} from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class TaskService {\n\n  constructor(private http:Http) {\n    console.log(\"task service initilized..\");\n   }\n\n   getTasks(){\n     let headers = new Headers();\n     headers.append('Content-Type','application/json');\n     let ep = this.prepEndpoint('api/tasks');\n\n\n     return this.http.get(ep,{headers: headers})\n     .map(res => res.json());\n   }\n\n   addTask(newTask){\n     let headers = new Headers();\n     headers.append('Content-Type','application/json');\n     let ep = this.prepEndpoint('api/task');\n\n     return this.http.post(ep, JSON.stringify(newTask), {headers: headers})\n      .map(res => res.json());\n   }\n\n   deleteTask(id){\n     let headers = new Headers();\n     headers.append('Content-Type','application/json');\n     let ep = this.prepEndpoint('api/task/'+id);\n\n     return this.http.delete(ep)\n      .map(res => res.json());\n   }\n\n   updateStatus(task){\n     let headers = new Headers();\n     headers.append('Content-Type','application/json');\n     let ep = this.prepEndpoint('api/task/'+task._id);\n\n     return this.http.put(ep, JSON.stringify(task), {headers: headers})\n      .map(res => res.json());\n   }\n\n   prepEndpoint(ep){\n      return ep;\n      // return 'http://localhost:8080/'+ep;\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/task.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 385;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 385\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { TaskService } from './services/task.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers:[TaskService]\n})\nexport class AppComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { TasksComponent } from './components/tasks/tasks.component';\nimport { TaskService } from './services/task.service';\n\nconst appRoutes: Routes = [\n  {path:'', component: TasksComponent}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TasksComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [TaskService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\nimport {TaskService} from '../../services/task.service';\nimport { Router } from '@angular/router';\nimport { Task } from '../../../../Task';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n  tasks: Task[];\n  title: string;\n\n  constructor(private TaskService:TaskService, private router:Router) {\n    this.TaskService.getTasks()\n    .subscribe(tasks => {\n      //console.log(tasks);\n        this.tasks = tasks;\n    });\n  }\n\n  addTask(event){\n    event.preventDefault();\n     //console.log(this.title);\n\n    let newTask = {\n      title: this.title,\n      isDone: false\n    }\n\n    this.TaskService.addTask(newTask)\n      .subscribe(task => {\n        this.tasks.push(task);\n        this.title = '';\n      });\n  }\n\n  deleteTask(id){\n    let tasks = this.tasks;\n\n    this.TaskService.deleteTask(id)\n      .subscribe(data => {\n        if(data.n == 1){\n          for(let i=0; i< tasks.length; i++){\n            if(tasks[i]._id == id){\n              tasks.splice(i, 1);\n            }\n          }\n        }\n      });\n  }\n\n  updateStatus(task){\n    let _task = {\n      _id: task._id,\n      title: task.title,\n      isDone: !task.isDone\n    };\n\n    this.TaskService.updateStatus(_task)\n      .subscribe(data => {\n        task.isDone = !task.isDone;\n      })\n\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/tasks/tasks.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 660\n// module chunks = 1","module.exports = \".completed {\\n  text-decoration: line-through;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/tasks/tasks.component.css\n// module id = 661\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n  <h1>My tasks list</h1>\\n  <hr>\\n    <router-outlet></router-outlet>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 662\n// module chunks = 1","module.exports = \"<form class=\\\"well\\\" (submit)=\\\"addTask($event)\\\">\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"title\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Add task...\\\">\\n  </div>\\n</form>\\n\\n<div class=\\\"task-list\\\">\\n     <div *ngFor=\\\"let task of tasks\\\">\\n        <div class=\\\"col-md-1\\\">\\n            <input type=\\\"checkbox\\\" [checked]=\\\"task.isDone\\\" (click)=\\\"updateStatus(task)\\\">\\n        </div>\\n        <div class=\\\"col-md-7\\\" [class.completed]=\\\"task.isDone\\\">\\n            {{ task.title }}\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n            <input type=\\\"button\\\" (click)=\\\"deleteTask(task._id)\\\" value=\\\"Delete\\\" class=\\\"btn btn-danger\\\">\\n        </div>\\n        <br><br>\\n     </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/tasks/tasks.component.html\n// module id = 663\n// module chunks = 1"],"sourceRoot":""}